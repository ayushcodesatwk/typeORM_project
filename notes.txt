ORM => OBJECT RELATIONAL MAPPER (uses OOP concepts to feed into database)

In large enterprise apps flow goes top to bottom like this-

Express (or any backend web app)
    ||
    \/
ORM (typeorm or other)
    ||
    \/
DATABASE DRIVER (postgres, sql etc)


- by default all operations are asynchronous in typeORM
-----------------------------------------------

 relations in typeORM -

 to make one to many relations

//making one to many or many to one relation with the product db.
//1st argument- cb with the db we are making connection with, 
//2nd argument- cb which shows in which column of other db, we're going to make relation.

//in the user entity
 @OneToMany(() => Product, (product) => product.user)
 cart: Cart[]

//in the cart entity
 @ManyToOne(() => User, (user) => user.cart)
 user: User

---------------

BUGS OF THE APP-

after filtering out the data we get the data but, 
when we scroll down we get all the remaining products.

after adding the product to the cart from the store page 
we doesn't get the increased number of cart items.

------------------------------

steps that I can take to fix the image url issue----

update & upload all the images to the database in assets to the product database 
as per the title...


